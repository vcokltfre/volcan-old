{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 Welcome to the documentation for Volcan.","title":"Home"},{"location":"#home","text":"Welcome to the documentation for Volcan.","title":"Home"},{"location":"API/","text":"Volcan API \u00b6","title":"Volcan API"},{"location":"API/#volcan-api","text":"","title":"Volcan API"},{"location":"commands/","text":"Volcan Commands \u00b6","title":"Volcan Commands"},{"location":"commands/#volcan-commands","text":"","title":"Volcan Commands"},{"location":"config/","text":"Volcan Config \u00b6","title":"Volcan Config"},{"location":"config/#volcan-config","text":"","title":"Volcan Config"},{"location":"setup/","text":"Volcan Setup \u00b6 You'll need to perform the following steps to set up the bot: Clone the bot respository. Set up a Postgres or MySQL (or MariaDB) database. Acquire credentials from Discord for the bot and OAuth. Configure the bot. Run the bot. Note All steps assume that you are hosting the bot on a Linux server running Ubuntu 20.04 or above. The steps may work on other distributions but are not tested. Manual Setup \u00b6 See the page on manual setup . Docker Compose Installation \u00b6 See the page on setting up with Docker Compose .","title":"Volcan Setup"},{"location":"setup/#volcan-setup","text":"You'll need to perform the following steps to set up the bot: Clone the bot respository. Set up a Postgres or MySQL (or MariaDB) database. Acquire credentials from Discord for the bot and OAuth. Configure the bot. Run the bot. Note All steps assume that you are hosting the bot on a Linux server running Ubuntu 20.04 or above. The steps may work on other distributions but are not tested.","title":"Volcan Setup"},{"location":"setup/#manual-setup","text":"See the page on manual setup .","title":"Manual Setup"},{"location":"setup/#docker-compose-installation","text":"See the page on setting up with Docker Compose .","title":"Docker Compose Installation"},{"location":"setup/compose/","text":"Docker Compose Setup \u00b6 1. Clone the bot respository \u00b6 Navigate to the directory you wish to clone the bot to then run: git clone https://github.com/vcokltfre/volcan.git Next, copy the .env.example file ready to fill out in later steps: cp .env.example .env 2. Acquire credentials from Discord for the bot and OAuth \u00b6 Head to the Discord Developer Portal and either create a new application or use one that already exists. You'll need the following data from the Bot and OAuth2 pages: Token Client ID Client Secret These should be filled into the relevant fields in the .env file you created earlier. 3. Configure the bot \u00b6 Copy the config.example.yml file and make the relevant changes to configure the bot how you'd like it: cp config.example.yml config.yml A config file reference can be found here . 4. Run the bot \u00b6 You will first need to install docker and docker-compose: sudo apt install docker.io docker-compose You can now start the bot by running: sudo docker-compose up --build -d Note The -d flag runs the containers in the background, meaning you don't need to keep the terminal open.","title":"Docker Compose Setup"},{"location":"setup/compose/#docker-compose-setup","text":"","title":"Docker Compose Setup"},{"location":"setup/compose/#1-clone-the-bot-respository","text":"Navigate to the directory you wish to clone the bot to then run: git clone https://github.com/vcokltfre/volcan.git Next, copy the .env.example file ready to fill out in later steps: cp .env.example .env","title":"1. Clone the bot respository"},{"location":"setup/compose/#2-acquire-credentials-from-discord-for-the-bot-and-oauth","text":"Head to the Discord Developer Portal and either create a new application or use one that already exists. You'll need the following data from the Bot and OAuth2 pages: Token Client ID Client Secret These should be filled into the relevant fields in the .env file you created earlier.","title":"2. Acquire credentials from Discord for the bot and OAuth"},{"location":"setup/compose/#3-configure-the-bot","text":"Copy the config.example.yml file and make the relevant changes to configure the bot how you'd like it: cp config.example.yml config.yml A config file reference can be found here .","title":"3. Configure the bot"},{"location":"setup/compose/#4-run-the-bot","text":"You will first need to install docker and docker-compose: sudo apt install docker.io docker-compose You can now start the bot by running: sudo docker-compose up --build -d Note The -d flag runs the containers in the background, meaning you don't need to keep the terminal open.","title":"4. Run the bot"},{"location":"setup/manual/","text":"Manual Setup \u00b6 1. Clone the bot respository \u00b6 Navigate to the directory you wish to clone the bot to then run: git clone https://github.com/vcokltfre/volcan.git Next, copy the .env.example file ready to fill out in later steps: cp .env.example .env 2. Set up a Postgres or MySQL (or MariaDB) database \u00b6 For Postgres see this DigitalOcean tutorial . For MySQL see this DigitalOcean tutorial . For MariaDB see this DigitalOcean tutorial . Make sure to put the URI of the database you set up in your .env file in the DB_DSN key. 3. Acquire credentials from Discord for the bot and OAuth \u00b6 Head to the Discord Developer Portal and either create a new application or use one that already exists. You'll need the following data from the Bot and OAuth2 pages: Token Client ID Client Secret These should be filled into the relevant fields in the .env file you created earlier. 4. Configure the bot \u00b6 Copy the config.example.yml file and make the relevant changes to configure the bot how you'd like it: cp config.example.yml config.yml A config file reference can be found here . 5. Run the bot \u00b6 Note You will need Go installed to build the bot outside Docker. You can see installation instructions for Ubuntu here . The bot can now be built and run: go build ./volcan","title":"Manual Setup"},{"location":"setup/manual/#manual-setup","text":"","title":"Manual Setup"},{"location":"setup/manual/#1-clone-the-bot-respository","text":"Navigate to the directory you wish to clone the bot to then run: git clone https://github.com/vcokltfre/volcan.git Next, copy the .env.example file ready to fill out in later steps: cp .env.example .env","title":"1. Clone the bot respository"},{"location":"setup/manual/#2-set-up-a-postgres-or-mysql-or-mariadb-database","text":"For Postgres see this DigitalOcean tutorial . For MySQL see this DigitalOcean tutorial . For MariaDB see this DigitalOcean tutorial . Make sure to put the URI of the database you set up in your .env file in the DB_DSN key.","title":"2. Set up a Postgres or MySQL (or MariaDB) database"},{"location":"setup/manual/#3-acquire-credentials-from-discord-for-the-bot-and-oauth","text":"Head to the Discord Developer Portal and either create a new application or use one that already exists. You'll need the following data from the Bot and OAuth2 pages: Token Client ID Client Secret These should be filled into the relevant fields in the .env file you created earlier.","title":"3. Acquire credentials from Discord for the bot and OAuth"},{"location":"setup/manual/#4-configure-the-bot","text":"Copy the config.example.yml file and make the relevant changes to configure the bot how you'd like it: cp config.example.yml config.yml A config file reference can be found here .","title":"4. Configure the bot"},{"location":"setup/manual/#5-run-the-bot","text":"Note You will need Go installed to build the bot outside Docker. You can see installation instructions for Ubuntu here . The bot can now be built and run: go build ./volcan","title":"5. Run the bot"}]}